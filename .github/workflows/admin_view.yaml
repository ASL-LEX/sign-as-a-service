name: admin_view

on:
  workflow_dispatch:
  push:
    paths:
      - 'packages/admin_view/**'
    branches:
      - main
    tags:
      - "v*.*.*"
  pull_request:
    paths:
      - 'packages/admin_view/**'
    branches:
      - main

jobs:
  lint:
    runs-on: ubuntu-latest
    name: Check for Linting Errors
    defaults:
      run:
        working-directory: packages/admin_view
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.ref }}

      - name: Setup NodeJS
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Clean Up
        run: rm ../../package.json

      - name: NPM Install
        run: npm install --only=dev
        shell: bash

      - name: Check for Linting Issues
        run: npm run prettier

  docker-build:
    runs-on: ubuntu-latest
    name: Build Docker Container
    defaults:
      run:
        working-directory: packages/admin_view
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Clean Up
        run: rm ../../package.json

      - uses: docker/setup-qemu-action@v2
      - uses: docker/setup-buildx-action@v2

      - name: Docker Tags
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            hicsail/lex-admin-view
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}
            type=semver,pattern={{major}}.{{minor}}

      - name: Login to Docker Hub
        if: github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/v')
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build & Push Docker Build
        uses: docker/build-push-action@v4
        with:
          context: ./packages/admin_view
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha,scope=lex
          cache-to: type=gha,mode=max,scope=lex

      - name: Push to Staging
        uses: fjogeleit/http-request-action@v1
        if: github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/v')
        with:
          method: "POST"
          url: ${{ secrets.PORTAINER_WEBHOOK }}
          preventFailureOnNoResponse: true
